{"version":3,"sources":["components/header.js","components/content.js","components/projects.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Content","id","Project","icon","faSmile","faFile","Contact","faInfo","faMailBulk","faCopyright","TxtRotate","el","toRotate","period","this","loopNum","parseInt","txt","tick","isDeleting","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","App","src","alt","class","data-period","data-rotate","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uKAoBeA,G,WAlBA,WACX,OACI,yBAAKC,UAAU,cACX,4BACI,4BACI,uBAAGC,KAAK,UAAR,UAEJ,4BACI,uBAAGA,KAAK,aAAR,aAEJ,4BACI,uBAAGA,KAAK,YAAR,gBCFLC,EAVC,WACZ,OACI,yBAAKF,UAAU,WACX,wCACA,uBAAGG,GAAG,QAAQH,UAAU,WAAxB,yQ,cCgDGI,EAjDC,WACZ,OACI,yBAAKJ,UAAU,iBAAiBG,GAAG,WAC/B,yBAAKH,UAAU,WACX,yBAAKA,UAAU,gBACX,2BACI,0CAAe,kBAAC,IAAD,CAAiBK,KAAMC,OACtC,uBAAGL,KAAK,+CAAR,aAAgE,kBAAC,IAAD,CAAiBI,KAAME,MAAvF,KACA,6BACA,uBAAGN,KAAK,yCAAR,eAA4D,kBAAC,IAAD,CAAiBI,KAAME,MAAnF,OAIR,yBAAKP,UAAU,gBACX,2BACI,2CACA,uBAAGC,KAAK,uCAAR,aAAwD,kBAAC,IAAD,CAAiBI,KAAME,MAA/E,KACA,6BACA,uBAAGN,KAAK,sCAAR,eAAyD,kBAAC,IAAD,CAAiBI,KAAME,MAAhF,OAGR,yBAAKP,UAAU,gBACX,2BACI,mDACA,uBAAGC,KAAK,2CAAR,aAA4D,kBAAC,IAAD,CAAiBI,KAAME,MAAnF,KACA,6BACA,uBAAGN,KAAK,yCAAR,eAA4D,kBAAC,IAAD,CAAiBI,KAAME,MAAnF,OAGR,yBAAKP,UAAU,gBACX,2BACA,yCACI,uBAAGC,KAAK,0CAAR,aAA2D,kBAAC,IAAD,CAAiBI,KAAME,MAAlF,KACA,6BACA,uBAAGN,KAAK,sCAAR,eAAyD,kBAAC,IAAD,CAAiBI,KAAME,MAAhF,OAGR,yBAAKP,UAAU,gBACX,2BACA,wCACI,uBAAGC,KAAK,qCAAR,aAAsD,kBAAC,IAAD,CAAiBI,KAAME,MAA7E,KACA,6BACA,uBAAGN,KAAK,uCAAR,eAA0D,kBAAC,IAAD,CAAiBI,KAAME,MAAjF,UCtBTC,EAnBE,WACb,OACI,yBAAKR,UAAU,eACX,yBAAKA,UAAU,SAASG,GAAG,WAC3B,4BACI,4BACI,uBAAGF,KAAK,UAAR,SAAuB,kBAAC,IAAD,CAAiBI,KAAMI,QAElD,4BACI,uBAAGR,KAAK,aAAR,WAA6B,kBAAC,IAAD,CAAiBI,KAAMK,QAExD,4BACI,uBAAGT,KAAK,YAAW,kBAAC,IAAD,CAAiBI,KAAMM,MAA1C,8BCLhBC,EAAY,SAASC,EAAIC,EAAUC,GACrCC,KAAKF,SAAWA,EAChBE,KAAKH,GAAKA,EACVG,KAAKC,QAAU,EACfD,KAAKD,OAASG,SAASH,EAAQ,KAAO,IACtCC,KAAKG,IAAM,GACXH,KAAKI,OACLJ,KAAKK,YAAa,GAGpBT,EAAUU,UAAUF,KAAO,WACzB,IAAIG,EAAIP,KAAKC,QAAUD,KAAKF,SAASU,OACjCC,EAAUT,KAAKF,SAASS,GAExBP,KAAKK,WACPL,KAAKG,IAAMM,EAAQC,UAAU,EAAGV,KAAKG,IAAIK,OAAS,GAElDR,KAAKG,IAAMM,EAAQC,UAAU,EAAGV,KAAKG,IAAIK,OAAS,GAGpDR,KAAKH,GAAGc,UAAY,sBAAsBX,KAAKG,IAAI,UAEnD,IAAIS,EAAOZ,KACPa,EAAQ,IAAsB,IAAhBC,KAAKC,SAEnBf,KAAKK,aAAcQ,GAAS,GAE3Bb,KAAKK,YAAcL,KAAKG,MAAQM,EAG1BT,KAAKK,YAA2B,KAAbL,KAAKG,MACjCH,KAAKK,YAAa,EAClBL,KAAKC,UACLY,EAAQ,MALRA,EAAQb,KAAKD,OACbC,KAAKK,YAAa,GAOpBW,YAAW,WACTJ,EAAKR,SACJS,IAGLI,OAAOC,OAAS,WAEd,IADA,IAAIC,EAAWC,SAASC,uBAAuB,cACtCd,EAAE,EAAGA,EAAEY,EAASX,OAAQD,IAAK,CACpC,IAAIT,EAAWqB,EAASZ,GAAGe,aAAa,eACpCvB,EAASoB,EAASZ,GAAGe,aAAa,eAClCxB,GACF,IAAIF,EAAUuB,EAASZ,GAAIgB,KAAKC,MAAM1B,GAAWC,KAgCxC0B,MA3Bf,WACE,OAEE,yBAAKzC,UAAU,OACb,4BAAQA,UAAU,UAChB,yBAAK0C,IAAI,yOAAyO1C,UAAU,WAAW2C,IAAI,SAC3Q,uBAAG3C,UAAU,YAAb,OAEE,0BACE4C,MAAM,aACNC,cAAY,OACZC,cAAY,wFAMlB,kBAAC,EAAD,CAAQ9C,UAAU,WAClB,6BACA,kBAAC,EAAD,MACA,yBAAKG,GAAG,YAAW,kBAAC,EAAD,OAEnB,kBAAC,EAAD,QC1Ec4C,QACW,cAA7Bd,OAAOe,SAASC,UAEe,UAA7BhB,OAAOe,SAASC,UAEhBhB,OAAOe,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjB,SAASkB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.858e5b9e.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css';\r\nconst Header = ()=> {\r\n    return (\r\n        <div className=\"sideheader\">\r\n            <ul>\r\n                <li>\r\n                    <a href='#about' >about</a>                 \r\n                </li>\r\n                <li>\r\n                    <a href='#projects' >Projects</a>\r\n                </li>\r\n                <li>\r\n                    <a href='#contact'>Contact</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nconst Content = ()=>{\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>About Me</h1>\r\n            <p id=\"about\" className=\"Content\">I am a final year computer science student pursuing my b-tech from JNTUH Hyderabad.\r\n            I have been working in django since last 6 months and have completed around 5-6 personal projects in the same. You can get more information about my projects in next section. </p>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Content;","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faFile, faQuestion, faSquare, faProjectDiagram, faSmile } from '@fortawesome/free-solid-svg-icons'\r\nconst Project = ()=>{\r\n    return (\r\n        <div className=\"projectSection\" id=\"project\">\r\n            <div className=\"Section\">\r\n                <div className=\"element_card\">\r\n                    <p>\r\n                        <p>Quora Clone <FontAwesomeIcon icon={faSmile}/></p>\r\n                        <a href=\"https://quora-clone-web.herokuapp.com/home/\">Site link <FontAwesomeIcon icon={faFile}/> </a>\r\n                        <br/>\r\n                        <a href=\"https://4k45hv3rm4/github/quora-clone\">Github link <FontAwesomeIcon icon={faFile}/> </a>\r\n\r\n                    </p>\r\n                </div>\r\n                <div className=\"element_card\">\r\n                    <p>\r\n                        <p>Freshily Web</p>\r\n                        <a href=\"https://freshily-web.herokuapp.com/\">Live link <FontAwesomeIcon icon={faFile}/> </a>\r\n                        <br/>\r\n                        <a href=\"https://4k45hv3rm4/github/freshily\">Github Repo <FontAwesomeIcon icon={faFile}/> </a>\r\n                        </p>\r\n                </div>\r\n                <div className=\"element_card\">\r\n                    <p>\r\n                        <p>Multi User Blog Site</p>\r\n                        <a href=\"http://thegreatblog.herokuapp.com/blog/\">Live link <FontAwesomeIcon icon={faFile}/> </a>\r\n                        <br/>\r\n                        <a href=\"https://4k45hv3rm4/github/dev-journal\">Github Repo <FontAwesomeIcon icon={faFile}/> </a>\r\n                    </p>\r\n                </div>\r\n                <div className=\"element_card\">\r\n                    <p>\r\n                    <p>Blog Site </p>\r\n                        <a href=\"http://akashwebblog.herokuapp.com/blog\">Live link <FontAwesomeIcon icon={faFile}/> </a>\r\n                        <br/>\r\n                        <a href=\"https://4k45hv3rm4/github/web-blog\">Github Repo <FontAwesomeIcon icon={faFile}/> </a>\r\n                    </p>\r\n                </div>\r\n                <div className=\"element_card\">\r\n                    <p>\r\n                    <p>Todo App </p>\r\n                        <a href=\"http://tasko-listo.herokuapp.com/\">Live link <FontAwesomeIcon icon={faFile}/> </a>\r\n                        <br/>\r\n                        <a href=\"https://4k45hv3rm4/github/todo-list\">Github Repo <FontAwesomeIcon icon={faFile}/> </a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Project;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfo, faMailBulk, faCopyright} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Contact  = () => {\r\n    return (\r\n        <div className=\"contactForm\">\r\n            <div className=\"footer\" id=\"contact\">\r\n            <ul>\r\n                <li>\r\n                    <a href='#about'>about <FontAwesomeIcon icon={faInfo}/></a>                 \r\n                </li>\r\n                <li>\r\n                    <a href='#projects' >Contact <FontAwesomeIcon icon={faMailBulk}/></a>\r\n                </li>\r\n                <li>\r\n                    <a href='#contact'><FontAwesomeIcon icon={faCopyright}/> Copyright akash 2020</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport Header from './components/header'\nimport Content from './components/content'\nimport Project from './components/projects'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {  faFile } from '@fortawesome/free-solid-svg-icons'\nimport Contact from './components/contact';\nimport {Button } from 'react-bootstrap/Button';\n\n\n\nvar TxtRotate = function(el, toRotate, period) {\n  this.toRotate = toRotate;\n  this.el = el;\n  this.loopNum = 0;\n  this.period = parseInt(period, 10) || 2000;\n  this.txt = '';\n  this.tick();\n  this.isDeleting = false;\n};\n\nTxtRotate.prototype.tick = function() {\n  var i = this.loopNum % this.toRotate.length;\n  var fullTxt = this.toRotate[i];\n\n  if (this.isDeleting) {\n    this.txt = fullTxt.substring(0, this.txt.length - 1);\n  } else {\n    this.txt = fullTxt.substring(0, this.txt.length + 1);\n  }\n\n  this.el.innerHTML = '<span class=\"wrap\">'+this.txt+'</span>';\n\n  var that = this;\n  var delta = 300 - Math.random() * 100;\n\n  if (this.isDeleting) { delta /= 2; }\n\n  if (!this.isDeleting && this.txt === fullTxt) {\n    delta = this.period;\n    this.isDeleting = true;\n  } else if (this.isDeleting && this.txt === '') {\n    this.isDeleting = false;\n    this.loopNum++;\n    delta = 500;\n  }\n\n  setTimeout(function() {\n    that.tick();\n  }, delta);\n};\n\nwindow.onload = function() {\n  var elements = document.getElementsByClassName('txt-rotate');\n  for (var i=0; i<elements.length; i++) {\n    var toRotate = elements[i].getAttribute('data-rotate');\n    var period = elements[i].getAttribute('data-period');\n    if (toRotate) {\n      new TxtRotate(elements[i], JSON.parse(toRotate), period);\n    }\n  }\n}\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <header className=\"header\">\n        <img src=\"https://instagram.fbho1-1.fna.fbcdn.net/v/t51.2885-19/s150x150/106030138_2568905516704579_3147270883394418410_n.jpg?_nc_ht=instagram.fbho1-1.fna.fbcdn.net&_nc_ohc=Lg4jYkR6iAcAX-CdR3p&oh=d598583af9bb01aef1fd5d9317b5e91a&oe=5F23AF10\" className=\"App-logo\" alt=\"logo\" />\n        <p className=\"mainText\">\n          I am\n          <span\n            class=\"txt-rotate\"\n            data-period=\"2000\"\n            data-rotate='[ \" Akash Verma.\", \" Bibliophile.\", \" Web Developer.\", \" Mobile Developer.\", \"\" ]'>\n\n          </span>\n        </p>\n\n      </header>\n      <Header className=\"header\"/>\n      <hr />\n      <Content />\n      <div id=\"projects\"><Project />\n      </div>\n      <Contact/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}